How to Plan a Web Project:
It's highly imperative that you have a solid plan/outline for any software projects that you will be building. The temptation to open-up your IDE and let you're fingers dance freely on the keyboard may be strong. But failure to properly plan a web project will most likely lead to a ton of problems, and twice as much stress as the project progresses. There are many different ways to go about planning your web projects...

User Stories:
A user story is basically a description of an applications functionalities from the perspective of the users. A bunch of "user stories" put together will clearly describe the feature-set of an app. From that description, you will then be able to design a detailed "flow-chart" which be a reliable guide on everything that needs to be needs to be implemented. Once you know exactly what you're going to build, you can then use "architecture" to figure out exactly how to build it. In this step is where you will organize your code and create all the necessary JavaScript functionality line by line. 

The Geo-location API (meta):
This is a built-in browser API much like timers or internationalization. The goe-location API is pretty simple to use, all you need to do is access the geo-location property in the navigator object, and then makes use of the getCurrentPosition() method within it. This method takes two callback functions. The first is executed once the browser has successfully identified the users location, and the other is executed if it fails to do so. The first callback is also called with a "position" parameter that you can make use of.  

Displaying a Map Using the Leaflet Library (meta):
The webapp you're building will require a map of the users location. And in this instance, that map will be provided by the a third party library called "Leaflet." To get started, obtain the hosted Leaflet library from their CDN and paste the links in the head of your HTML.

Project Architecture:
There are many advanced architecture patterns that can be applied to JavaScript projects. This particular project will be built using object-oriented programming with ES6 classes. One of the most important aspects of any architecture is to decide where and how to store the data, and this is due to the fact that data is the most important part of any application. For this project, classes and objects will have to be designed to best fit the type of data the application will be handling (distance, location, time, speed, elevation, etc.). 

Managing Workout Data (meta):
Classes should be implemented to handle the data of the cycling and running workouts that are coming from the user interface. 

Creating a New Workout (meta):
You will create a new workout from the user interface using the classes implemented in the previous step. 

Rendering New Workouts (meta):
Now that you implemented a way for new workout objects to be created, it's time to render those objects in the UI. 

Marker Movement Feature (meta):
Implement a feature that moves the viewport of the map central to the workout marker was dropped by the user.  